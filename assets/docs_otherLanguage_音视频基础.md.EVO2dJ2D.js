import{_ as s,c as a,o as i,U as n}from"./chunks/framework.vlRQM0sk.js";const o=JSON.parse('{"title":"音视频基础","description":"","frontmatter":{},"headers":[],"relativePath":"docs/otherLanguage/音视频基础.md","filePath":"docs/otherLanguage/音视频基础.md","lastUpdated":1718292798000}'),p={name:"docs/otherLanguage/音视频基础.md"},l=n(`<h1 id="音视频基础" tabindex="-1">音视频基础 <a class="header-anchor" href="#音视频基础" aria-label="Permalink to &quot;音视频基础&quot;">​</a></h1><h2 id="音视频概念" tabindex="-1">音视频概念 <a class="header-anchor" href="#音视频概念" aria-label="Permalink to &quot;音视频概念&quot;">​</a></h2><h3 id="视频" tabindex="-1">视频 <a class="header-anchor" href="#视频" aria-label="Permalink to &quot;视频&quot;">​</a></h3><p><img src="https://hedaodao-1256075778.cos.ap-beijing.myqcloud.com/Essay/20240518112813N7Bben.png" alt="image-20240518112810450"></p><p><img src="https://hedaodao-1256075778.cos.ap-beijing.myqcloud.com/Essay/2024051811301986rWUt.png" alt="image-20240518113019564"></p><p><img src="https://hedaodao-1256075778.cos.ap-beijing.myqcloud.com/Essay/20240518113329zaDLlt.png" alt="image-20240518113329585"></p><p><img src="https://hedaodao-1256075778.cos.ap-beijing.myqcloud.com/Essay/20240518113445pUHR36.png" alt="image-20240518113444838"></p><p>分辨率</p><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>320x240</span></span>
<span class="line"><span></span></span>
<span class="line"><span>640x360</span></span>
<span class="line"><span></span></span>
<span class="line"><span>1280x720</span></span>
<span class="line"><span></span></span>
<span class="line"><span>1920*1080</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><h3 id="音频" tabindex="-1">音频 <a class="header-anchor" href="#音频" aria-label="Permalink to &quot;音频&quot;">​</a></h3><p><img src="https://hedaodao-1256075778.cos.ap-beijing.myqcloud.com/Essay/20240518113650V00lYy.png" alt="image-20240518113650365"></p><p><img src="https://hedaodao-1256075778.cos.ap-beijing.myqcloud.com/Essay/20240518113728af2axj.png" alt="image-20240518113728569"></p><p><img src="https://hedaodao-1256075778.cos.ap-beijing.myqcloud.com/Essay/202405181142536s0JWd.png" alt="image-20240518114252887"></p><p><img src="https://hedaodao-1256075778.cos.ap-beijing.myqcloud.com/Essay/20240518113805W2ofKk.png" alt="image-20240518113805506"></p><p><img src="https://hedaodao-1256075778.cos.ap-beijing.myqcloud.com/Essay/202405181139379TwUDq.png" alt="image-20240518113937138"></p><p><img src="https://hedaodao-1256075778.cos.ap-beijing.myqcloud.com/Essay/20240518114129ZdiqcG.png" alt="image-20240518114129832"></p><p><img src="https://hedaodao-1256075778.cos.ap-beijing.myqcloud.com/Essay/20240518114340H1yqgF.png" alt="image-20240518114340616"></p><p>把低码率文件转成高码率的是没有效果的</p><p><img src="https://hedaodao-1256075778.cos.ap-beijing.myqcloud.com/Essay/20240518114643wujFat.png" alt="image-20240518114643636"></p><p>我们日常听得歌曲大概4分钟左右，一首歌不经过编码可达到40M，这是非常大的</p><p><img src="https://hedaodao-1256075778.cos.ap-beijing.myqcloud.com/Essay/20240518114749tpquAP.png" alt="image-20240518114748830"></p><p><img src="https://hedaodao-1256075778.cos.ap-beijing.myqcloud.com/Essay/20240518114841SfZgdk.png" alt="image-20240518114841352"></p><p><img src="https://hedaodao-1256075778.cos.ap-beijing.myqcloud.com/Essay/20240518115242CxM8HZ.png" alt="image-20240518115242366"></p><p><img src="https://hedaodao-1256075778.cos.ap-beijing.myqcloud.com/Essay/20240518115708X8HL0j.png" alt="image-20240518115707964"></p><p><img src="https://hedaodao-1256075778.cos.ap-beijing.myqcloud.com/Essay/20240518115809mVMPGR.png" alt="image-20240518115809291"></p><p><img src="https://hedaodao-1256075778.cos.ap-beijing.myqcloud.com/Essay/20240518145007Nj7kX3.png" alt="image-20240518145006222"></p><p><img src="https://hedaodao-1256075778.cos.ap-beijing.myqcloud.com/Essay/20240518145134m7Kng5.png" alt="image-20240518145134314"></p><h3 id="封装" tabindex="-1">封装 <a class="header-anchor" href="#封装" aria-label="Permalink to &quot;封装&quot;">​</a></h3><p><img src="https://hedaodao-1256075778.cos.ap-beijing.myqcloud.com/Essay/20240518145602NvCn9l.png" alt="image-20240518145602522"></p><p>例子：</p><p><img src="https://hedaodao-1256075778.cos.ap-beijing.myqcloud.com/Essay/20240518145724gWz0Bf.png" alt="image-20240518145724098"></p><p>封装文件内部音视频格式不是固定的，以TS格式为例子：</p><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>视频编码可以是：</span></span>
<span class="line"><span>	1、MPEG-2 Video：这是TS格式最初设计时支持的视频编码标准，广泛用于数字电视广播。</span></span>
<span class="line"><span> 	2、H.264/AVC：一种高效的视频压缩标准，广泛应用于高清和标清视频内容。</span></span>
<span class="line"><span>	3、H.265/HEVC：相比H.264，提供了更高的压缩效率，适用于超高清（UHD）内容。</span></span>
<span class="line"><span>	4、VC-1：另一种视频编码标准，尽管不如H.264和MPEG-2普及，但在某些应用场景中也会使用。</span></span>
<span class="line"><span></span></span>
<span class="line"><span>音频编码可以是：</span></span>
<span class="line"><span>	1、MPEG-1 Layer II (MP2)：传统上用于数字电视广播的音频编码。</span></span>
<span class="line"><span>	2、AAC (Advanced Audio Coding)：提供更好的音频质量，尤其是在较低比特率下，是现代广播和流媒体服务的常见选择。</span></span>
<span class="line"><span>	3、AC-3 (Dolby Digital)：广泛用于环绕声内容，特别是在蓝光和数字电视广播中。</span></span>
<span class="line"><span>	4、DTS (Digital Theater System)：另一种高质量的多声道音频编码格式，常见于高清视频内容。</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><p>常见的封装格式（容器）：</p><p><img src="https://hedaodao-1256075778.cos.ap-beijing.myqcloud.com/Essay/20240518145816195egC.png" alt="image-20240518145815996"></p><p>视频元数数据，例如rgb、yuv（像素格式），一般会编码压缩为特定的编码格式，例如H.264</p><p>音频原始数据PCM，一般会编码压缩为特定格式，例如ACC</p><p>编码后的放入容器</p><h3 id="音视频同步" tabindex="-1">音视频同步 <a class="header-anchor" href="#音视频同步" aria-label="Permalink to &quot;音视频同步&quot;">​</a></h3><p><img src="https://hedaodao-1256075778.cos.ap-beijing.myqcloud.com/Essay/20240518145932aLase4.png" alt="image-20240518145931968"></p><p><img src="https://hedaodao-1256075778.cos.ap-beijing.myqcloud.com/Essay/20240518150047s1m8cr.png" alt="image-20240518150047177"></p><p>一般是以音频为Master，视频跟随音频</p><h2 id="ffmpeg" tabindex="-1">ffmpeg <a class="header-anchor" href="#ffmpeg" aria-label="Permalink to &quot;ffmpeg&quot;">​</a></h2><h3 id="安装" tabindex="-1">安装 <a class="header-anchor" href="#安装" aria-label="Permalink to &quot;安装&quot;">​</a></h3><h4 id="静态构建版本" tabindex="-1">静态构建版本 <a class="header-anchor" href="#静态构建版本" aria-label="Permalink to &quot;静态构建版本&quot;">​</a></h4><p><strong>判断系统架构</strong></p><p>目前公司使用的虚拟机一般都是AMD64架构的</p><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>lscpu # Architecture: xxx , xxx就是系统CPU架构。一般有x86、x86_64（AMD64）、ARM</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p><strong>选择静态构建版本</strong></p><p>下载页面：<a href="https://johnvansickle.com/ffmpeg/" target="_blank" rel="noreferrer">John Van Sickle - FFmpeg Static Builds</a></p><p>网页内容如下，红框中是已经构建好的AMD64的FFmpeg7.0版本</p><p><img src="https://hedaodao-1256075778.cos.ap-beijing.myqcloud.com/Essay/20240527181022xPZoWU.png" alt="image-20240527181020249"></p><p><strong>下载安装</strong></p><div class="language-shell vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 下载（上一步网页中，选择版本处鼠标右键复制的链接）</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">wget</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> https://johnvansickle.com/ffmpeg/releases/ffmpeg-release-amd64-static.tar.xz</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 解压到 /usr/local/ffmpeg 目录下 。注意：需先创建好/usr/local/ffmpeg目录</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">tar</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -xvf</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ffmpeg-release-amd64-static.tar.xz</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  --strip-components</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -C</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /usr/local/ffmpeg</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 进入解压后的目录</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /usr/local/ffmpeg</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> </span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 查看是否解压成功</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ls</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # 输出应该包括 ffmpeg 表示安装成功</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 配置环境变量</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">vim</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ~/.bashrc</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # 加入 export PATH=&quot;$PATH:/usr/local/ffmpeg&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 刷新</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">source</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ~/.bashrc</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # 这里需要注意下，whoami可以输出当其的用户名，配置修改~/.bashrc只是配置了当前用户的环境变量。例如系统还存在用户app，可以 vim home/app/.bashrc 写入环境变量后再刷新，则app用户才能访问到ffmpeg</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br></div></div><h4 id="编译源码" tabindex="-1">编译源码 <a class="header-anchor" href="#编译源码" aria-label="Permalink to &quot;编译源码&quot;">​</a></h4><p>自己整理的源码编译方式：</p><ul><li><p>下载源码</p><p>有wget</p><div class="language-shell vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># https://ffmpeg.org//releases/可查看全部版本 </span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 下载</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">wget</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> http://www.ffmpeg.org/releases/ffmpeg-6.1.1.tar.gz</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 解压</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">tar</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -zxvf</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ffmpeg-6.1.1.tar.gz</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ffmpeg-6.1.1</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><p>有git</p><div class="language-shell vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> clone</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> git://source.ffmpeg.org/ffmpeg.git</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ffmpeg</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 查看版本</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> branch</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -a</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 选择版本</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> checkout</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -b</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> remotes/origin/release/xxx</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div></li><li><p>指定编译模块</p><p>Linux</p><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span># ERROR: aom &gt;= 1.0.0 not found using pkg-config</span></span>
<span class="line"><span>yum install libaom-devel</span></span>
<span class="line"><span></span></span>
<span class="line"><span></span></span>
<span class="line"><span># ERROR: libass &gt;= 0.11.0 not found using pkg-config</span></span>
<span class="line"><span>yum install libass-dev</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div></li><li><p>编译、安装</p><div class="language-shell vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">make</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -j</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">$(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">nproc</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">)</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # -j指定并发数，nproc是一个shell命令返回cpu个数</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">make</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div></li></ul><h3 id="文档相关" tabindex="-1">文档相关 <a class="header-anchor" href="#文档相关" aria-label="Permalink to &quot;文档相关&quot;">​</a></h3><div class="language-shell vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ffmpeg</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -h</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # 简单文档</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ffmpeg</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -h</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> full</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # 详细文档</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>输出到文件</p><div class="language-shell vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ffmpeg</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -h</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> full</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ./text</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>查找</p><div class="language-shell vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ffmpeg</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -h</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> full</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> grep</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> xx</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>其他文档信息</p><p>注：过滤器是用来加水印、加文字的</p><div class="language-shell vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ffmpeg</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -h</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> full</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> muxer=flv</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 具体选项的参数。ffmpeg -muxers 可查到所有的复用器，然后可以查具体的哪个复用器,支持哪些参数</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p><img src="https://hedaodao-1256075778.cos.ap-beijing.myqcloud.com/Essay/20240517102528odNb82.png" alt="image-20240517102528758"></p><h3 id="编码流程" tabindex="-1">编码流程 <a class="header-anchor" href="#编码流程" aria-label="Permalink to &quot;编码流程&quot;">​</a></h3><div class="language-shell vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ffmpeg</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -i</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> inputVideo.mp4</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -acodec</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> copy</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -vcodec</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> libx264</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -s</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1280*</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">720</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> outputVideo.flv</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p><img src="https://hedaodao-1256075778.cos.ap-beijing.myqcloud.com/Essay/20240517101047eEnAoU.png" alt="image-20240517101046352"></p><p>流程：</p><ul><li><p>文件通过demuxer （解复用器）转化为音频流、视频流</p></li><li><p>decoder（解码器）转化为帧数据</p></li><li><p>帧处理可以实现帧率的转换</p></li><li><p>encoder编码视频、音频</p></li><li><p>muxer（复用器）将音频、视频合并为一个文件</p></li></ul><div class="language-shell vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ffmpeg</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -i</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> input.mp4</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -codec</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> copy</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -ss</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 10</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -t</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 20</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -f</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> flv</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> out.flv</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 核心参数：</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># -i 设置输入</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># -codec copy(新写法 -c copy) 不改变编码</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># -f 指定输入、输出格式。 -i之前使用表示输入格式，-i之后使用表示输出格式</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">## 如果 -f flv output.mp4 ，结果会发现输出文件名为output.mp4，但实际文件是flv格式的。不指定-f，默认转换为文件名后缀格式</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># -ss 开始时间（单位s）例如：-s 00:01:00在1分钟时开始</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># -t 时间长度（单位s）</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># -y 如果输出文件名在目录下存在同名文件，直接覆盖（默认报错，不覆盖）</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ffmpeg</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -i</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> input.mp4</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -b:a</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 192</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">k</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -ar</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 48000</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -ac</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 2</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -acodec</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> libmp3lame</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -aframes</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 200</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  out.mp3</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 音频参数：</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># -aframes 输出音频的帧数</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># -b:a 音频码率。可以写成xxk的形式</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># -ac 音频声道数</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># -ar 音频采样率</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># -an 不处理音频</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># -af 音频过滤器</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># -acodec 设置音频编码器，参数copy表示直接拷贝原始数据。查自己需要的编、解码器名。这里我转成mp3，ffmpeg -encodecs | grep mp3 ，查到编码器名：libmp3lame 。注意：不同的音频编、解码器都对于配置的取值范围可能不同</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># -c:a 设置音频解码器</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ffmpeg</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -i</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> input.mp4</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -vframes</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 300</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -b:v</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 300</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">k</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -r</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 30</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -s</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 640</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">x480</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -aspect</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 16</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">:9</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -vcodec</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> libx265</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> out.mp3</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 视频参数：</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># -vframes 输出视频的帧数</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># -b:v 视频码率。可以写成xxk的形式</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># -r 视频帧率</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># -s 视频分辨率 nxm (n是宽像素、m是高像素)</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># -vn 不处理视频</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># -aspect 视频纵横比（以宽高为基准，进行的拉伸）。例如：4:3、16:9</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># -vcodec 视频编码器，参数：编码器名|copy，其中copy表示直接拷贝原始数据</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># -c:v 视频解码器</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># -vf 视频过滤器。可用于裁剪、缩放、旋转、添加水印、颜色调整的场景</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># -vbsf 视频比特流过滤器  例如：-vbsf h264_mp4toannexb：这个过滤器常用于将H.264视频流从MP4格式转换为适合TS或FLV容器的格式</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br></div></div><h3 id="提取音视频" tabindex="-1">提取音视频 <a class="header-anchor" href="#提取音视频" aria-label="Permalink to &quot;提取音视频&quot;">​</a></h3><h4 id="提取音频" tabindex="-1">提取音频 <a class="header-anchor" href="#提取音频" aria-label="Permalink to &quot;提取音频&quot;">​</a></h4><div class="language-shell vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ffmpeg</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -i</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> input.mp4</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -vcodec</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> copy</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -vn</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> video.mp4</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> </span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ffmpeg</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -i</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> input.mp4</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -vcodec</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> libx264</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -vn</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> video.h264</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # 使用libx264编码器，转成hs264格式</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h4 id="提取视频" tabindex="-1">提取视频 <a class="header-anchor" href="#提取视频" aria-label="Permalink to &quot;提取视频&quot;">​</a></h4><div class="language-shell vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ffmpeg</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -i</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> input.mp4</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -vcodec</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> copy</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -an</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> video.mp4</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ffmpeg</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -i</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> input.mp4</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -vcodec</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> libmp3lame</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -an</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> audio.mp3</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> #  使用libmp3lame编码器，转成mp3格式</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h4 id="提取像素" tabindex="-1">提取像素 <a class="header-anchor" href="#提取像素" aria-label="Permalink to &quot;提取像素&quot;">​</a></h4><p>提取YUV</p><div class="language-shell vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ffmpeg</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -i</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> input.mp4</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  -pix_fmt</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> yuv420p</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ouput.yuv</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # 如果视频比较长，可以以哪个 -t 3 ，即提取3s视频中的YUV数据</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ffmpeg</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -i</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> input.mp4</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -pix_fmt</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> yuv420p</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -s</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 320</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">x240</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ouput.yuv</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # -s 指定分辨率</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>播放</p><div class="language-shell vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ffplay</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -pixel_format</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> yuv420p</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -video_size</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 320</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">X240</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -i</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ouput.yuv</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>提取RGB</p><div class="language-shell vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ffmpeg</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -i</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> input.mp4</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -pix_fmt</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> rgb24</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ouput.rgb</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h4 id="提取pcm" tabindex="-1">提取PCM <a class="header-anchor" href="#提取pcm" aria-label="Permalink to &quot;提取PCM&quot;">​</a></h4><p>PCM是一种未经压缩的音频格式，通过采样、量化和编码过程，将连续的模拟信号转换为离散的数字信号。</p><div class="language-shell vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># ffmpeg -muxers | grep PCM 可以获取复用器支持哪些类型</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ffmpeg</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -i</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> input.mp3</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -ar</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 48000</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -ac</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 2</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -f</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> s16le</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> output</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # -f 指定输出格式s16le</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ffmpeg</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -i</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> input.mp3</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -ar</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 48000</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -ac</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 2</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -sample_fmt</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> s16le</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> output.wav</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> #</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># ffmpeg -encoders | grep pcm 可以获取编码器支持哪些类型</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ffmpeg</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -i</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> input.mp3</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -ar</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 48000</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -ac</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 2</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -acodec</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> pcm_s16le</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> output.wav</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # 编码器pcm_s16le</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><h3 id="封装格式" tabindex="-1">封装格式 <a class="header-anchor" href="#封装格式" aria-label="Permalink to &quot;封装格式&quot;">​</a></h3><p>如果不指定编、解码器，则默认按照文件的后缀名使用编、解码器</p><p><strong>注意：如果想要保持编码不变，使用 -acodec copy、-vcodec copy</strong></p><div class="language-shell vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ffmpeg</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -i</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> input.mp4</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -vcodec</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> libx265</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> out.mp4</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # hs265格式</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ffmpeg</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -i</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> input.mp4</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -r</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 15</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> out.mp4</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # -r 15，即修改为15帧。注意：不能有 -vcodec copy，否则失效</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h3 id="裁剪合并视频" tabindex="-1">裁剪合并视频 <a class="header-anchor" href="#裁剪合并视频" aria-label="Permalink to &quot;裁剪合并视频&quot;">​</a></h3><p>MP4格式</p><div class="language-shell vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 裁剪视频1  </span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ffmpeg</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -i</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> input1.mp4</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -ss</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 00</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">:05:00</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -t</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 10</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -codec</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> copy</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> output1.mp4</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # 从00:05:00开始，裁剪10s</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 裁剪视频2</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ffmpeg</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -i</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> input1.mp4</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -ss</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 00</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">:05:00</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -t</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 10</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -codec</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> copy</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> output2.mp4</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>转换为ts、flv格式</p><div class="language-shell vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 转成ts。需要-vbsf h264_mp4toannexb</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ffmpeg</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -i</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> input1.mp4</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -ss</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 00</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">:05:00</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -t</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 10</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -codec</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> copy</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -vbsf</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> h264_mp4toannexb</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> output1.ts</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ffmpeg</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -i</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> input1.mp4</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -ss</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 00</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">:05:00</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -t</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 10</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -codec</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> copy</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> output1.flv</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>使用vbsf的原因：</p><p><img src="https://hedaodao-1256075778.cos.ap-beijing.myqcloud.com/Essay/2024052015083114gtP7.png" alt="image-20240520150830658"></p><p>合并视频</p><ul><li><p>方式1：concat指定多个视频</p><p><strong>注意这种方式仅仅适合TS格式</strong></p><div class="language-shell vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ffmpeg</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -i</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;concat:output1.ts|output2.ts&quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -codec</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> copy</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  result.mp4</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 或者 可以将视频转化为TS格式再使用方式1拼接</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ffmpeg</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -i</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;concat:output1.mp4|output2.mp4&quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -codec</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> copy</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -vbsf</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> h264_mp4toannexb</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> result.ts</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div></li><li><p>方式2：从文件读取</p><div class="language-shell vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ffmpeg</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -f</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> concat</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -i</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> xx.txt</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -codec</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> copy</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> result.mp4</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # -f concat 使用concat协议，这是专门为文件合并设计的</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>xx.txt 内容如下</p><div class="language-txt vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">txt</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>file &#39;output1.mp4&#39;</span></span>
<span class="line"><span>file &#39;output2.mp4&#39;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div></li><li><p>注意</p><p>封装格式相同，但是其中音频、视频格式可能不一样</p><p>但是合并视频，要求</p><ul><li>视频格式必须一样</li><li>音频格式、采样率、通道必须一样</li></ul><div class="language-shell vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">如果不一致或者不清楚是否一致，可以强制转换：</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -vcodec</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> libx264</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -acodec</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> aac</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div></li></ul><h3 id="图片与视频互转" tabindex="-1">图片与视频互转 <a class="header-anchor" href="#图片与视频互转" aria-label="Permalink to &quot;图片与视频互转&quot;">​</a></h3><p>图片</p><div class="language-shell vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 截取一帧 -vframes 1 </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 注意ffmpeg会根据转换文件的后缀自动调用编码器</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ffmpeg</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -y</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -i</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> input.mp4</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -ss</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 00</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">:03:00</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -vframes</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -s</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 640</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">x360</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> test1.jpg</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # 在3分钟时，截取1帧</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 截取多帧 </span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ffmpeg</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -y</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -i</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> input.mp4</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -t</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 5</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -r</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 15</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -s</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 640</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">x360</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> frames%03d.jpg</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># -t 5 截取5s视频 </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># -r 帧率15， 5*15=75张图片</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># frames%03d.jpg ，命名格式为： frames001.jpg	、frames002.jpg	</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 合并图片为视频</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ffmpeg</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -f</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> image2</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -i</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> test%03d.jpg</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -r</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 25</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> video.mp4</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # -f 不指定也可以</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><p>GIF图</p><div class="language-shell vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 视频 ===》 GIF</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ffmpeg</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -i</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> input.mp4</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -t</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 5</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -r</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> image.gif</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # gif实际上就是取视频5s,帧率为1</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># GIF ===》 视频</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ffmpeg</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -f</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> gif</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -i</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> image.gif</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> output.mp4</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # -f 不指定也可以</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><h3 id="屏幕录制-略" tabindex="-1">屏幕录制（略） <a class="header-anchor" href="#屏幕录制-略" aria-label="Permalink to &quot;屏幕录制（略）&quot;">​</a></h3><h3 id="直播" tabindex="-1">直播 <a class="header-anchor" href="#直播" aria-label="Permalink to &quot;直播&quot;">​</a></h3><p>一般情况下</p><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>rtmp流协议一般传输flv格式</span></span>
<span class="line"><span></span></span>
<span class="line"><span>http协议一般传输ts格式</span></span>
<span class="line"><span></span></span>
<span class="line"><span>但这些也不是绝对的</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h4 id="拉流" tabindex="-1">拉流 <a class="header-anchor" href="#拉流" aria-label="Permalink to &quot;拉流&quot;">​</a></h4><p>RTMP(Real-Time Messaging Protocol） 是一种实时消息传输协议，最初由 Adobe 开发用于 Flash 平台。它以低延迟和高效的实时数据传输而闻名，适用于直播和实时互动应用。</p><div class="language-shell vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 使用ffplay可直接播放流</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ffplay</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> rtmp://mobliestream.c3tv.com:554/live/goodtv.sdp</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # 韩国GOOD TV</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 将流作为输入，存储到本地</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 注意：-c copy是直接拷贝流，可能存在流格式与输入文件格式不匹配的现象。所以除了rtmp转flv以外，其他一般不写 -c copy,ffmpeg会自动使用编码器转换的</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ffmpeg</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -i</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> rtmp://mobliestream.c3tv.com:554/live/goodtv.sdp</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -c</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> copy</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -t</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 10</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> test.flv</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><h4 id="推流" tabindex="-1">推流 <a class="header-anchor" href="#推流" aria-label="Permalink to &quot;推流&quot;">​</a></h4><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>ffmpeg -re -i input.mp4 -c copy -f flv rtmp://xxxx</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h3 id="过滤器" tabindex="-1">过滤器 <a class="header-anchor" href="#过滤器" aria-label="Permalink to &quot;过滤器&quot;">​</a></h3><p>注意：</p><ul><li>下面的例子可以用于图片、视频，只要改变输入的文件就行</li><li>使用ffplay可以直接预览过滤器效果，所以例子都是使用ffplay的。ffmpeg处理命令与ffplay是一致的</li></ul><h4 id="裁剪-crop" tabindex="-1">裁剪（Crop） <a class="header-anchor" href="#裁剪-crop" aria-label="Permalink to &quot;裁剪（Crop）&quot;">​</a></h4><p><img src="https://hedaodao-1256075778.cos.ap-beijing.myqcloud.com/Essay/20240520231706ILog8a.png" alt="image-20240520231706740"></p><div class="language-shell vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ffmpeg</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -i</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> input.jpg</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -vf</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> crop=iw/3:ih:0:0</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> output.jpg</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # 整体宽度的1/3，整体高度。从（0,0）开始裁剪</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ffplay</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> xxxx</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # 可以通过ffplay预览，与ffmpeg命令一致就行</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h4 id="文字水印-待补充" tabindex="-1">文字水印（待补充） <a class="header-anchor" href="#文字水印-待补充" aria-label="Permalink to &quot;文字水印（待补充）&quot;">​</a></h4><p>drawtext滤镜参数</p><p>文档：<a href="https://ffmpeg.org/ffmpeg-filters.html?spm=5176.28103460.0.0.4e153da2e0WqpY#drawtext" target="_blank" rel="noreferrer">https://ffmpeg.org/ffmpeg-filters.html?spm=5176.28103460.0.0.4e153da2e0WqpY#drawtext</a></p><p>注意需编译截图中的模块</p><p><img src="https://hedaodao-1256075778.cos.ap-beijing.myqcloud.com/Essay/20240524165755zyYcq3.png" alt="image-20240524165754453"></p><div class="language-shell vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">./configure</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --prefix=编译结果输出目录</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">--enable-libfreetype </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">--enable-libharfbuzz </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">--enable-libfontconfig </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">--enable-libfribidi</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># ERROR: fontconfig not found using pkg-config</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">arch</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -arm64</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> brew</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> fontconfig</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> #M系列芯片才需要加 arch -arm64 前缀</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># ERROR: fribidi not found using pkg-config</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">arch</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -arm64</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> brew</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> fribidi</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># ERROR: harfbuzz not found using pkg-config</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">arch</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -arm64</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> brew</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> harfbuzz</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">make</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -j</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">$(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">nproc</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">)</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> &amp;&amp; </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">make</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br></div></div><div class="language-shell vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># text 文字（字符串类型）</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># textfile 可以输入文件（字符串类型）</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># box 文字区域背景框（布尔类型，默认false）</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># boxcolor 背景框颜色（颜色，字体区域块的颜色）</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># font 字体名称（字符串类型，默认Sans字体）</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># fontSize 字体大小（整数类型，单位是px）</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># fontcolor 字体大小（整数类型，单位是px）</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># x (字符串，默认为0)</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># y (字符串，默认为0)</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># alpha (浮点数，取值范围：0~1，默认为1)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><p>例子:</p><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>ffmpeg1 -i input.mp4 -vf &quot;drawtext=fontsize=100:fontcolor=green:text=&#39;hello world&#39;:x=10:y=10&quot; output_text.mp4</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>Filter时间相关的内置变量</p><div class="language-shell vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># -t 时间戳（未知则为NAN）</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># n 输入帧的索引（从0开始）</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># pos 输入帧，在视频中偏移的位置（未知则为NAN）</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># w 输入视频帧的宽度</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># h 输入视频帧的高度</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><h4 id="图片水印、画中画" tabindex="-1">图片水印、画中画 <a class="header-anchor" href="#图片水印、画中画" aria-label="Permalink to &quot;图片水印、画中画&quot;">​</a></h4><p>使用movie滤镜，本质就是两组输入叠加的效果</p><p>下面movie滤镜中的logo.png是图片水印，如果换视频就是画中画了</p><div class="language-shell vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ffmpeg</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -i</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> input.mp4</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -vf</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;movie=logo.png[watermark];[in][watermark]overlay=10:20[out]&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> output.mp4</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># -i input.mp4 指的是输入的视频</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># logo.png 是图片水印</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># logo.png[watermark]，watermark是随意取得名字，表示前面输入的logo图片。一般输入图片命名watermark，视频是sub</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># [in][watermark]overlay， [in]表示-i输入的视频，[in][watermark]overlay表示叠加的两组输入</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 10:20 表示水印左上角位距离视频的left、top（10:20是简写，完整的写法是overlay=x=10:y=20）</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># [out] 表示输入合成结果</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ffmpeg</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -i</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> input.mp4</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -vf</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;movie=logo.png,scale=50X50[watermark];[in][watermark]overlay=10:20[out]&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> output.mp4</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># scale=50X50 指定水印尺寸 </span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 其他位置的变量</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># main_w、main_h 输入视频的宽高</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># overlay_w、overlay_w 水印的宽高</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 用法：</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># main_w-10:main_h-10 水印的右下角距离视频的右下角 10:10</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 水印随时间t移动</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ffmpeg</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -i</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> input.mp4</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -vf</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;movie=logo.png[watermark];[in][watermark]overlay=x=mod(50*t,main_w):y=abs(sin(t))*h*0.7[out]&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> output.mp4</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br></div></div><p>overlay的参数</p><div class="language-shell vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># x、y 整数 图片水印左上角距离</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># eof_actice 整数 两组视频播放完毕时的展示状态</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">	# repeat（值为0）画中画停留在最后一帧(默认值)</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">	# endcall（值为1）立即停止所有的流，保留停止时的画面</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">	# pass（值为2）画中画播完后，立即消失，主视频继续播放</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># shortest 布尔值 最短视频播放完成，终止所有流（默认false）</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># format 整数类型 设置输出的像素格式</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # yuv420（值为0）默认值</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # yuv422（值为1）</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # yuv444（值为2）</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # rgb（值为3）</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><p>画中画</p><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>ffmpeg -i input.mp4 -vf &quot;movie=input2.mp4[watermark];[in][watermark]overlay=10:20:eof_actice=1[out]&quot; output.mp4</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h2 id="ffmpeg编程" tabindex="-1">ffmpeg编程 <a class="header-anchor" href="#ffmpeg编程" aria-label="Permalink to &quot;ffmpeg编程&quot;">​</a></h2><p>播放器框架</p><p>Packet是个编码压缩的数据</p><p>Frame帧是解码后的数据</p><p><img src="https://hedaodao-1256075778.cos.ap-beijing.myqcloud.com/Essay/20240530005518i6jBRz.png" alt="播放器框架"></p><p><img src="https://hedaodao-1256075778.cos.ap-beijing.myqcloud.com/Essay/20240530010632YyUNqX.png" alt="image-20240530010632190"></p>`,146),e=[l];function h(t,r,k,d,c,g){return i(),a("div",null,e)}const b=s(p,[["render",h]]);export{o as __pageData,b as default};
