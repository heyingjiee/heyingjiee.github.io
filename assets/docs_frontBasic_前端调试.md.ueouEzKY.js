import{_ as e,c as o,a2 as t,o as i}from"./chunks/framework.CQii86iU.js";const m=JSON.parse('{"title":"前端调试","description":"","frontmatter":{},"headers":[],"relativePath":"docs/frontBasic/前端调试.md","filePath":"docs/frontBasic/前端调试.md","lastUpdated":1690132323000}'),p={name:"docs/frontBasic/前端调试.md"};function s(d,a,l,r,c,n){return i(),o("div",null,a[0]||(a[0]=[t('<h1 id="前端调试" tabindex="-1">前端调试 <a class="header-anchor" href="#前端调试" aria-label="Permalink to &quot;前端调试&quot;">​</a></h1><h2 id="vue项目" tabindex="-1">Vue项目 <a class="header-anchor" href="#vue项目" aria-label="Permalink to &quot;Vue项目&quot;">​</a></h2><h3 id="_3个概念" tabindex="-1">3个概念 <a class="header-anchor" href="#_3个概念" aria-label="Permalink to &quot;3个概念&quot;">​</a></h3><ul><li><p>npm dev 启动的是开发服务器 。 控制台输出的地址是服务器地址，浏览器访问这个地址返回页面</p><p><img src="https://hedaodao-1256075778.cos.ap-beijing.myqcloud.com/Essay/20250221005301pPr0Np.png" alt="image-20250221005300883"></p></li><li><p>以远程调试模式启动Chrome ，打开上面地址后 ，浏览器会启动调试的 ws 调试服务</p></li><li><p>Chrome devtool、IDEA 开发工具都需要链接 Chrome 启动的调试服务</p><p><img src="https://hedaodao-1256075778.cos.ap-beijing.myqcloud.com/Essay/20250221005538xZqmNQ.png" alt="image-20250221005538363"></p><p><img src="https://hedaodao-1256075778.cos.ap-beijing.myqcloud.com/Essay/202502210056412uLeTt.png" alt="image-20250221005641711"></p></li></ul><p>⚠️ 调试 npm dev 时间是调试开发服务器，而不是源码</p><p>⚠️ IDEA 实际上不能调试代码，调试能力是Chrome提供的，IDEA 只是连接了这个调试服务</p><h3 id="idea连接调试服务" tabindex="-1">IDEA连接调试服务 <a class="header-anchor" href="#idea连接调试服务" aria-label="Permalink to &quot;IDEA连接调试服务&quot;">​</a></h3><h4 id="调试步骤" tabindex="-1">调试步骤 <a class="header-anchor" href="#调试步骤" aria-label="Permalink to &quot;调试步骤&quot;">​</a></h4><ul><li><p>启动 Web 开发服务器 npm dev</p></li><li><p>启动 Chrome 的调试服务</p><p><img src="https://hedaodao-1256075778.cos.ap-beijing.myqcloud.com/Essay/20250221011646uwwtEl.png" alt="image-20250221011646127"></p><p>设置 Chrome 以调试模式启动 （<code>--remote-debugging-port=9222</code>，指定调试端口）</p><p><img src="https://hedaodao-1256075778.cos.ap-beijing.myqcloud.com/Essay/20250221010420S1K2QV.png" alt="image-20250221010420297">、<img src="https://hedaodao-1256075778.cos.ap-beijing.myqcloud.com/Essay/20250221010515C6MbZ8.png" alt="image-20250221010515191"></p></li></ul><p>访问 <code> localhost:9222/json</code>访问调试信息</p><p><img src="https://hedaodao-1256075778.cos.ap-beijing.myqcloud.com/Essay/20230722232553%20.png" alt="image-20230722232553264"></p><h4 id="调试窗口" tabindex="-1">调试窗口 <a class="header-anchor" href="#调试窗口" aria-label="Permalink to &quot;调试窗口&quot;">​</a></h4><p><img src="https://hedaodao-1256075778.cos.ap-beijing.myqcloud.com/Essay/20250221011840cHgn2s.png" alt="image-20250221011840081"></p><p>浏览器运行的是 build 后的代码，为啥在 chrome devtool、IDEA 中的源码打断点能生效 ？</p><p><img src="https://hedaodao-1256075778.cos.ap-beijing.myqcloud.com/Essay/20230723012053%20.png" alt="image-20230723012053546"></p><p>对于Vue项目来说，浏览器实际运行的是编译后的代码。在Vue 构建配置中开启sourceMaps选项后</p><p>chrome devtool 中显示的是 Vue 源码</p><p><img src="https://hedaodao-1256075778.cos.ap-beijing.myqcloud.com/Essay/20230723011054%20.png" alt="image-20230723011054385"></p><h4 id="注意" tabindex="-1">注意 <a class="header-anchor" href="#注意" aria-label="Permalink to &quot;注意&quot;">​</a></h4><p>经过测试发现，不仅可以调试自己写的代码，还能调试node_modules中的三方包</p><p>只不过，IDEA 对于三方依赖的代码分析似乎存在问题，很多时候无法找到</p><h2 id="调试三方依赖" tabindex="-1">调试三方依赖 <a class="header-anchor" href="#调试三方依赖" aria-label="Permalink to &quot;调试三方依赖&quot;">​</a></h2><p>eslint</p><h2 id="调试-npm脚本" tabindex="-1">调试 npm脚本 <a class="header-anchor" href="#调试-npm脚本" aria-label="Permalink to &quot;调试 npm脚本&quot;">​</a></h2>',24)]))}const u=e(p,[["render",s]]);export{m as __pageData,u as default};
